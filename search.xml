<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo主题优化——加速访问</title>
      <link href="/2022/05/07/hexo-zhu-ti-you-hua-jia-su-fang-wen/"/>
      <url>/2022/05/07/hexo-zhu-ti-you-hua-jia-su-fang-wen/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>DL_LHY21_01_Regression_P1</title>
      <link href="/2022/05/07/dl-lhy21-01-regression-p1/"/>
      <url>/2022/05/07/dl-lhy21-01-regression-p1/</url>
      
        <content type="html"><![CDATA[<h1 id="Regression"><a href="#Regression" class="headerlink" title="Regression"></a>Regression</h1><h2 id="Machine-Learning"><a href="#Machine-Learning" class="headerlink" title="Machine Learning"></a>Machine Learning</h2><p>​第一堂课 是要简单跟大家介绍一下machine learning还有deep learning的基本概念，等一下会讲一个跟宝可梦完全没有关係的故事。想必大家在报章杂志上其实往往都已经听过机器学习这一个词汇，那你可能也知道说机器学习就是跟今天很热门的AI好像有那么一点关联。</p><p>​那所谓的机器学习到底是什么呢？顾名思义，机器他具备有学习的能力，那些科普文章往往把机器学习这个东西吹得玄之又玄好像机器会学习以后，我们就有了人工智慧，有了人工智慧以后机器接下来就要统治人类了。那机器学习到底是什么呢？事实上，机器学习概括来说可以用一句话来描述机器学习这件事，==<strong>机器学习就是让机器具备找一个函式的能力</strong>==。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303140808788.png" alt="image-20210303140808788" style="zoom:67%;"><p>​那机器具备找函式的能力以后,他确实可以做很多事 举例来说</p><ol><li>假设你今天想要叫机器做语音辨识,机器听一段声音,產生这段声音对应的文字,那你需要的就是一个函式,这个函式的输入是声音讯号,输出是这段声音讯号的内容。那你可以想像说 这个可以把声音讯号,当作输入文字当作输出的函式,显然非常非常的复杂，他绝对不是,你可以用人手写出来的方程式,这个函式他非常非常的复杂,人类绝对没有能力把它写出来,所以我们期待<strong>凭藉著机器的力量,把这个函式自动找出来，这件事情,就是机器学习</strong>。</li></ol><p>​2. 还有好多好多的任务,我们都需要找一个很复杂的函式,举例来说 假设我们现在要做,影像辨识 那这个影像辨识,我们需要什麼样的函式呢？这个函式的输入是一张图片,他的输出是什麼呢？他是这个,图片裡面 有什麼样的内容。</p><p>​3. 或者是大家都知道的AlphaGo,其实也可以看作是一个函式,要让机器下围棋 我们需要的,就是一个函式 这个函式的输入,是棋盘上黑子跟白子的位置,输出是什麼 输出是机器下一步,应该落子的位置 假设你可以,找到一个函式 这个函式的输入,就是棋盘上黑子跟白子的位置,输出就是下一步应该落子的位置,那我们就可以让机器做自动下围棋,这件事 就可以做一个AlphaGo。</p><h2 id="Different-types-of-Functions"><a href="#Different-types-of-Functions" class="headerlink" title="Different types of Functions"></a>Different types of Functions</h2><p>​随著我们要找的函式不同,机器学习有不同的类别,那这边介绍几个专有名词给大家,认识一下 第一个专有名词,叫作==<strong>Regression</strong>==,Regression的意思是说,假设我们今天要找的函式,他的输出是一个数值,他的输出是一个 scalar,那这样子的机器学习的任务,我们称之為<strong>Regression</strong>。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303150319122.png" alt="image-20210303150319122" style="zoom:67%;"><p>​那这边举一个Regression的例子,假设我们今天要机器做的事情,是预测未来某一个时间的,PM2.5的数值 你要叫机器,做的事情是找一个函式,这个我们用f来表示,这个函式的输出,是明天中午的PM2.5的数值,他的输入可能是种种跟预测PM2.5,有关的指数 包括今天的PM2.5的数值,今天的平均温度,今天平均的臭氧浓度等等,这一个函式可以拿这些数值当作输入,输出明天中午的PM2.5的数值,那这一个找这个函式的任务,叫作Regression。</p><p>​除了Regression以外,另外一个大家耳熟能详的任务,叫作==<strong>Classification</strong>==,那Classification这个任务,要<strong>机器做的是选择题</strong> 我们人类,先準备好一些选项 那这些选项,又叫作类别 又叫作classes,我们现在要找的函式它的输出,就是从我们设定好的选项裡面,选择一个当作输出 那这个问题,这个任务就叫作Classification。举例来说,现在每个人都有gmail account,那gmail account裡面有一个函式,这个函式可以帮我们侦测一封邮件,是不是垃圾邮件,这个函式的输入是一封电子邮件,那他的输出是什麼呢,你要先準备好你要机器选的选项,在侦测垃圾邮件这个问题裡面,可能的选项就是两个,是垃圾邮件 或不是垃圾邮件,Yes或者是No,那机器要从Yes跟No裡面,选一个选项出来,这个问题叫作Classification,那Classification不一定只有两个选项,也可以有多个选项 。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303150520780.png" alt="image-20210303150520780" style="zoom:67%;"><p>​举例来说,alpha go本身也是一个Classification,的问题 那只是这个Classification,他的选项是比较多的,那如果要叫机器下围棋,你想做一个 alpha go的话,我们要给机器多少的选项呢,你就想想看 棋盘上有多少个位置,那我们知道棋盘上有19乘19个位置,那叫机器下围棋这个问题 其实,就是一个有19乘19个选项的选择题,你要叫机器做的就是找一个函式,这个函式的输入是棋盘上,黑子跟白子的位置,输出就是从19乘19个选项裡面,选出一个正确的选项,从19乘19个可以落子的位置裡面,选出下一步应该要落子的位置,那这个问题也是一个分类的问题。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303150701751.png" alt="image-20210303150701751" style="zoom:50%;"><p>​其实很多教科书 在讲机器学习的,种种不同类型的任务的时候,往往就讲到这边 告诉你说,机器学习 两大类任务,一个叫作Regression,一个叫作Classification,然后就结束了,但是假设你对机器学习的认知,只停留在机器学习就是两大类任务,Regression跟Classification,那就好像你以為说,这个世界只有五大洲一样。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303150756419.png" alt="image-20210303150756419" style="zoom:50%;"><p>​你知道这个世界不是只有五大洲,这个世界外面是有一个,黑暗大陆的 这鬼灭之刃连载之前,我们就已经出发前往黑暗大陆了,鬼灭之刃连载以后,我们居然都还没有到,可见这个黑暗大陆距离那麼远,那在机器学习这个领域裡面,所谓的黑暗大陆是什麼呢,在於Regression跟Classification以外,大家往往害怕碰触的问题,叫作Structured Learning,也就是机器今天不只是要做选择题,不只是输出一个数字 还要產生,一个有结构的物件 举例来说,<strong>机器画一张图 写一篇文章,这种叫机器產生有结构的东西的问题,就叫作Structured Learning</strong>,那如果要讲得比较拟人化,比较潮一点 Structured Learning,你可以用拟人化的讲法说,我就是要叫机器学会创造这件事情,好那到目前為止,我们就是讲了三个机器学习的任务,Regression Classification跟Structured Learning,</p><h2 id="Case-Study"><a href="#Case-Study" class="headerlink" title="Case Study"></a>Case Study</h2><p>​我们说,机器学习就是要找一个函式,那机器怎麼找一个函式呢,那这边要用个例子跟大家说明说。在讲这个例子之前 先跟大家说一下,说这一门课有一个youtube的频道<a href="https://www.youtube.com/c/HungyiLeeNTU">https://www.youtube.com/c/HungyiLeeNTU</a>,然后这个我会把上课的录影,放到这个youtube的频道上面,那这个频道 感谢过去修过这门课的,同学不嫌弃 其实也蛮多人订阅,所以我算是一个三流的youtuber,是没有什麼太多流量,但是这边也是有7万多订阅。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303151602177.png" alt="image-20210303151602177" style="zoom: 67%;"><p>​那為什麼突然提到,这个youtube的频道呢,因為我们等一下要举的例子,跟youtube是有关係的,youtuber在意的,就是这个频道的流量,假设有一个youtuber,是靠著youtube维生的,他会在意频道有没有流量,这样他才会知道他可以获利多少,假设你自己有youtube频道的话,你会知道说在youtube后台,你可以看到很多相关的资讯,你可以看到很多相关的资讯,比如说每一天按讚的人数有多少,每一天订阅的人数有多少,每一天观看的次数有多少,我们能不能够根据,一个频道过往所有的资讯去预测,它明天有可能的观看的次数是多少呢,我们能不能够<strong>找一个函式,这个函式的输入是youtube上面,youtube后台是我的资讯,输出就是某一天,隔天这个频道会有的总观看的次数</strong>.</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303151716230.png" alt="image-20210303151716230" style="zoom:67%;"><p><strong>机器学习找这个函式的过程,分成三个步骤</strong>,那我们就用Youtube频道,点阅人数预测这件事情,来跟大家说明这三个步骤,是怎麼运作的</p><h3 id="1-Function-with-Unknown-Parameters"><a href="#1-Function-with-Unknown-Parameters" class="headerlink" title="1. Function with Unknown Parameters"></a>1. Function with Unknown Parameters</h3><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303152040870.png" alt="image-20210303152040870" style="zoom:67%;"><p>​第一个步骤是我们要==<strong>写出一个,带有未知参数的函式</strong>==,简单来说就是 我们先猜测一下,我们打算找的这个函式$F$,它的数学式到底长什麼样子。举例来说,我们这边先做一个最初步的猜测,我们写成这个样子<br>$$<br>y=b+w*xₗ<br>$$<br>​这边的每一个数值是什麼呢,这个y啊 就假设是今天吧,不过今天还没有过完,所以我还不知道,今天总共的点阅次数是多少,所以这件事情是我们未知的,</p><ul><li><strong>$y$是我们準备要预测的东西</strong>,我们準备要预测的是今天,2月26号这个频道总共观看的人</li><li><strong>$xₗ$是这个频道,前一天总共观看的人数</strong>,$y$跟$xₗ$都是数值,</li><li><strong>b跟w是未知的参数,它是準备要透过资料去找出来的</strong>,我们还不知道w跟b应该是多少,我们只是隐约的猜测</li></ul><p>​<strong>这个猜测往往就来自於,你对这个问题本质上的了解,也就是Domain knowledge</strong>,所以才会听到有人说,这个做机器学习啊,就需要一些Domain knowledge,.</p><p>​所以我们这个能够预测未来点阅次数的函式$F$,它就一定是前一天的点阅次数,乘上w 再加上b呢,我们先不知道 这是一个猜测,也许我们觉得说,这个今天的点阅次数,总是会跟昨天的点阅次数有点关联,所以我们把昨天的点阅次数,乘上一个数值,但是总是不会一模一样,所以再加上一个b做修正,当作是对於2月26号,点阅次数的预测,这是一个猜测,它不一定是对的,我们等一下回头会再来修正这个猜测。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303161120997.png" alt="image-20210303161120997" style="zoom:67%;"><p>​那现在总之,我们就随便猜说,$y=b+w<em>xₗ$,而*<em>b跟w是未知的</em></em>,这个带有未知的==<strong>参数</strong>==,这个<strong>Parameter中文通常翻成参数</strong>,==这个带有Unknown的Parameter的Function 我们就叫做Model==,所以我们常常听到有人说,模型 Model,<strong>Model这个东西在机器学习裡面,就是一个带有,未知的Parameter的Function</strong>,</p><p>​这个$xₗ$是这个Function裡面我们已知的,已经知道的东西,它是来自於Youtube后台的资讯,我们已经知道2月25号,点阅的总人数是多少,这个东西叫做==Feature==,而$w$跟$b$是我们不知道的,它是Unknown的Parameter,那这边我们也给$w$跟$b$,给他一个名字,这个跟Feature做相乘的未知的参数,这个w 我们叫它==weight==,这个没有跟Feature相乘的,是直接加下去的,这个我们叫它==Bias==,那这个只是一些名词的定义而已,等一下我们讲课的时候,我们在称呼,模型裡面的每一个东西的时候,会更為方便,好那这个是第一个步骤.</p><h3 id="2-Define-Loss-from-Training-Data"><a href="#2-Define-Loss-from-Training-Data" class="headerlink" title="2. Define Loss from Training Data"></a>2. Define Loss from Training Data</h3><p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303161923678.png" alt="image-20210303161923678"></p><p>​第二个步骤,是我们要==定义一个东西叫做Loss==,<strong>Loss它也是一个Function,那这个Function它的输入,是我们Model裡面的参数</strong>,我们的Model叫做,$y=b+w*xₗ$,而$b$跟$w$是未知的,是我们準备要找出来的,所谓的这个Loss啊,它是一个Function,这个Function的输入,就是$b$跟$w$,所以L它是一个Function,它的输入是Parameter,是model裡面的Parameter,那这个Loss 这个Function,<strong>这个Function输出的值代表说,现在如果我们把这一组未知的参数,设定某一个数值的时候,这笔数值好还是不好</strong>。</p><p>​那这样讲可能你觉得有点抽象,所以我们就举一个具体的例子,假设现在我们给未知的参数的设定是$b$,这bias等於0.5k,这个$w$呢直接等於1,那这个Loss怎麼计算呢,如果我们b设0.5k,这个$w$设1,那我们拿来预测,未来的点阅次数的函式 就变成,y等於0.5k加1倍的xₗ,那这样子的一个函式,这个0.5k跟1,他们所代表的这个函式,它有多少呢,这个东西就是Loss.</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303162101557.png" alt="image-20210303162101557" style="zoom:50%;"><p>​我们要怎麼计算这个Loss呢,这个我们就要==<strong>从训练资料来进行计算</strong>==,在这个问题裡面,我们的训练资料是,这一个频道过去的点阅次数,举例来说,从2017年到2020年的点阅次数,每天的这个频道的点阅次数都知道,这边是假的数字啦,随便乱编的,好  所以那我们知道,2017年1月1号,到2020年12月31号的,点阅数字是多少,接下来我们就可以计算Loss。</p><p>​我们把2017年1月1号的点阅次数,代入这一个函式裡面,我们已经说我们想要知道,b设定為0.5k,$w$设定為1的时候,这个函式有多棒,当b设定為0.5k,w设定為1的时候,我们拿来预测的这个函数,是y等於0.5k加一倍的xₗ,那我们就把这个xₗ代4.8k,看它的预测出来的结果是多少,所以 根据这一个函式,根据$b$设0.5k,w设1的这个函式,如果1月1号,是4.8k的点阅次数的话,那隔天应该是4.8k乘1加0.5k,就是5.3k的点阅次数,那隔天实际上的点阅次数,1月2号的点阅次数我们知道吗,从后台的资讯裡面 我们是知道的,所以我们可以<strong>比对一下,现在这个函式预估的结果,跟真正的结果,它的差距有多大</strong>,这个函式预估的结果是5.3k,真正的结果是多少呢,真正的结果是4.9k,那这个真实的值叫做==Label==,它是高估了,高估了这个频道可能的点阅人数,那就可以计算一下这个差距,计算一下估测的值,跟真实的值的差距,这边<strong>估测的值用y来表示,真实的值用ŷ</strong>来表示,你可以计算y跟ŷ之间的差距,得到一个eₗ,代表估测的值跟真实的值之间的差距,那<strong>计算差距其实不只一种方式</strong>,我这边把y跟ŷ相减,直接取绝对值,算出来的值是0.4k。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303163641680.png" alt="image-20210303163641680" style="zoom:50%;"><p>​那我们不是只能用1月1号,来预测1月2号的值,我们可以用1月2号的值,来预测1月3号的值,如果我们现在的函式是,y等於0.5k加一倍的xₗ,那1月2号,根据1月2号的点阅次数,预测的1月3号的点阅次数的,值是多少呢 是5.4k,以xₗ代4.9k进去,乘1在加0.5k 等於5.4k,接下来计算这个5.4k,跟真正的答案,跟Label之间的差距,Label是7.5k,看来是一个低估,低估了这个频道,在1月3号的时候的点阅次数,才可以算出e₂,这个e₂是,y减y跟ŷ之间的差距,算出来是2.1k,那同一个方法,你就可以算过这三年来,每一天的预测的误差,假设我们今天的Function,是y等於0.5k加一倍的xₗ,这三年来每一天的误差,通通都可以算出来,每一天的误差都可以给我们一个小e,</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303163837725.png" alt="image-20210303163837725" style="zoom:50%;"><p>​接下来我们就<strong>把每一天的误差,通通加起来,加起来然后取得平均</strong>,这个大N代表我们的训验资料的个数,,就是三年来的训练资料,就365乘以3,每年365天 所以365乘以3,那我们算出一个L,我们算出一个大L,这大L是每一笔训练资料的误差,这个e相加以后的结果,这个大L就是我们的Loss.</p><p>==<strong>大L越大,代表我们现在这一组参数越不好,这个大L越小,代表现在这一组参数越好</strong>==</p><p>​<strong>估测的值跟实际的值之间的差距,其实有不同的计算方法</strong>,在我们刚才的例子裡面,我们是算y跟ŷ之间,绝对值的差距,这一种计算差距的方法,得到的这个大L,得到的Loss叫 mean absolute error,缩写是<strong>MAE</strong>,如果你今天的e是用,相减y平方算出来的,这个叫mean square error,又叫<strong>MSE</strong>,那MSE跟MAE,他们其实有非常微妙的差别.我们就是选择MAE,作為我们计算这个误差的方式,把所有的误差加起来,就得到Loss,那你要选择MSE也是可以的,在作业裡面我们会用MSE,那有一些任务,如果y和ŷ它都是机率,都是<strong>机率分佈</strong>的话,在这个时候,你可能会选择<strong>Cross-entropy</strong>,这个我们都之后再说,我们这边就是选择了MAE,那这个是机器学习的第二步.</p><h3 id="Error-Surface"><a href="#Error-Surface" class="headerlink" title="Error Surface"></a>Error Surface</h3><p>​我刚才举的那些数字,不是真正的例子,以下的数字,是真实的例子,是这个频道真实的后台的数据,所计算出来的结果,那我们可以调整不同的w,我们可以调整不同的b,求取各种w 求取各种b,组合起来以后,我们可以為不同的w跟b的组合,都去计算它的Loss,然后就可以画出以下这一个<strong>等高线图.</strong></p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303170054572.png" alt="image-20210303170054572" style="zoom:50%;"><p>​在这个等高线图上面,<strong>越偏红色系,代表计算出来的Loss越大,就代表这一组w跟b越差,如果越偏蓝色系,就代表Loss越小,就代表这一组w跟b越好</strong>,拿这一组w跟b,放到我们的Function裡面,放到我们的Model裡面,那我们的预测会越精準,所以你就知道说,假设w在负0.25,这个b在负500,就代表说呢这个W在负0.25,b在负500 就代表说,这个频道每天看的人越来越少,而且Loss这麼大,跟真实的状况不太合,如果w代0.75 b代500,那这个正确率,这个估测会比较精準,那估测最精準的地方看起来,应该是在这裡啦,如果你今天w代一个很接近1的值,b带一个小小的值,比如说100多,那这个时候估测是最精準的,那这跟大家的预期可能是比较接近的,就是你拿前一天的点阅的总次数,去预测隔天的点阅的总次数,那可能前一天跟隔天的点阅的总次数,其实是差不多的,所以w设1,然后b设一个小一点的数值,也许你的估测就会蛮精準的,那像这样子的一个等高线图,就是你试著<strong>试了不同的参数,然后计算它的Loss,画出来的这个等高线图</strong>,叫做==Error Surface==,那这个是机器学习的第二步,</p><h3 id="3-Optimization"><a href="#3-Optimization" class="headerlink" title="3. Optimization"></a>3. Optimization</h3><p>​接下来我们进入机器学习的第三步,那第三步要做的事情,其实是==解一个最佳化的问题==,如果你不知道最佳化的问题,是什麼的话也没有关係,我们今天要做的事情就是,<strong>找一个w跟b,把未知的参数,找一个数值出来,看代那一个数值进去,可以让我们的大L,让我们的Loss的值最小,那个就是我们要找的w跟b</strong>,那这个可以让loss最小的w跟b,我们就叫做$w*$ 跟 $b*,$代表说他们是最好的一组w跟b,可以让loss的值最小.</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303204106233.png" alt="image-20210303204106233" style="zoom: 67%;"><p>​在这一门课裡面 我们唯一会用到的,Optimization的方法,叫做==Gradient Descent==。<strong>為了要简化起见,我们先假设我们未知的参数只有一个,就是$w$</strong>,我们先假设没有b那个未知的参数,只有w这个未知的参数.</p><p>​那当我们<strong>w代不同的数值的时候,我们就会得到不同的Loss,这一条曲线就是error surface</strong>,只是刚才在前一个例子裡面,我们看到的error surface,是二维的是2D的,那<strong>这边只有一个参数,所以我们看到的这个error surface,是1D</strong>的.</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303210559053.png" alt="image-20210303210559053" style="zoom: 67%;"><h3 id="x3D-x3D-那怎麼样找一个w-去让这个loss的值最小呢-x3D-x3D"><a href="#x3D-x3D-那怎麼样找一个w-去让这个loss的值最小呢-x3D-x3D" class="headerlink" title="==那怎麼样找一个w,去让这个loss的值最小呢?=="></a>==那怎麼样找一个w,去让这个loss的值最小呢?==</h3><ul><li><p>那首先你要<strong>随机选取一个初始的点</strong>,那这个初始的点,我们叫做**$w₀$**,那这个初始的点往往真的就是随机的,那在往后的课程裡面,我们其实会看到也许有一些方法,可以给我们一个比较好的w零的值.我们先当作都是随机的,那假设我们随机决定的结果,是在w0这个地方。</p></li><li><p>那接下来你就要计算,<strong>在w等於w0的时候,w这个参数对loss的微分是多少</strong>$∂L/∂w |(w=w^0 )$,如果你不知道微分是什麼的话,那没有关係反正我们做的事情就是,计算在这一个点,在<strong>w₀这个位置的error surface的切线斜率</strong>,也就是这一条<strong>蓝色的虚线,它的斜率</strong>,那如果这一条虚线的斜率是负的,那代表什麼意思呢,代表说左边比较高 右边比较低,在这个位置附近,左边比较高 右边比较低。</p></li><li><p>那如果<strong>左边比较高右边比较低</strong>的话,我们就把<strong>w的值变大</strong>,那我们就可以让<strong>loss变小</strong>,如果算出来的斜率是正的,就代表说左边比较低右边比较高,是这个样子的,左边比较低右边比较高,如果左边比较低 右边比较高的话,那就代表我们把w变小了,w往左边移 我们可以让Loss的值变小,那这个时候你就应该把w的值变小,那假设你连斜率是什麼都不知道的话,也没有关係,你就想像说有一个人站在这个地方,然后他左右环视一下,那这一个算微分这件事啊,就是左右环视,它会知道左边比较高还是右边比较高,看哪边比较低,它就往比较低的地方跨出一步,</p><p>  <strong>那这一步要跨多大呢,<strong>这一步的步伐的大小取</strong>决於两件事情</strong>,</p><ul><li>第一件事情是<strong>这个地方的斜率有多大</strong>,这个地方的斜率大,这个步伐就跨大一点,斜率小步伐就跨小一点,</li><li>另外 除了斜率以外,就是除了微分这一项,还有另外一个东西会影响步伐大小,这个东西我们这边用$η$来表示,这个$η$叫做==learning rate==,叫做学习速率,这个learning rate 它是怎麼来的呢,==它是你自己设定的,你自己决定这个$η$的大小==,如果$η$设大一点,那你每次参数update就会量大,你的学习可能就比较快,如果η设小一点,那你参数的update就很慢,每次只会改变一点点参数的数值,那这种你在做机器学习,需==要自己设定的东西,叫做hyperparameters==</li></ul></li></ul><h3 id="有同学问说-為什麼loss可以是负的呢"><a href="#有同学问说-為什麼loss可以是负的呢" class="headerlink" title="有同学问说,為什麼loss可以是负的呢?"></a>有同学问说,為什麼<strong>loss可以是负的</strong>呢?</h3><p>​<strong>Loss这个函数是自己定义的</strong>,所以在刚才我们的定义裡面,我们说loss就是估测的值,跟正确的值,它的绝对值,那如果根据刚才loss的定义,那它不可能是负的,但是loss的这一个function,是你自己决定的,你可以说,我今天要决定一个loss function,就是绝对值再减100,那你可能就有负的,所以我这边这一个curve,我这边可能刚才忘了跟大家说明说,这个curve并不是一个真实的loss,它是我随便乱举的一个例子,因為在今天,我想要举一个比较general 的case,它并不是一个真实任务的,Error surface,所以这个loss的这个curve,这个error surface,它可以是任何形状,这边没有预设立场说,它一定要是什麼形状,但是确实在真实,在刚才这一个如果loss的定义,就跟我刚才定的一样是绝对值,那它就不可能是负值,但这个loss,<strong>这个function是你自己决定的,所以它有可能是负的</strong></p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303204024741.png" alt="image-20210303204024741" style="zoom: 67%;"><p>​那我们说我们要把w⁰往右移一步,那这个新的位置就叫做w¹,这一步的步伐是η乘上微分的结果,那如果你要用数学式来表示它的话,就是把w⁰减掉η乘上微分的结果,得到w¹<br>$$<br>w^1←w^0-η \frac{∂L}{∂w}|(w=w^0 )<br>$$<br>,那接下来你就是反覆进行刚才的操作,你就计算一下w¹微分的结果,然后再决定现在要把w¹移动多少,然后再移动到w²,然后你再继续反覆做同样的操作,不断的把w移动位置,最后你会停下来.</p><h3 id="x3D-x3D-什麼时候会停下来呢-往往有两种状况-x3D-x3D"><a href="#x3D-x3D-什麼时候会停下来呢-往往有两种状况-x3D-x3D" class="headerlink" title="==**什麼时候会停下来呢?**往往有两种状况==,"></a>==**什麼时候会停下来呢?**往往有两种状况==,</h3><ul><li>第一种状况是你失去耐心了,你一开始会设定说,我今天在调整我的参数的时候,我在计算我的微分的时候,我<strong>最多计算几次</strong>,你可能会设说,我的上限就是设定100万次,就我参数更新100万次以后,我就不再更新了,那至於==要更新几次,这个也是一个hyperparameter,这个是你自己决定的==,做一个deadline是明天,那你可能更新的次数就设少一点,对它下周更新的次数就设多一点,</li><li>那还有另外一种理想上的,停下来的可能是,今天当我们不断调整参数,调整到一个地方,它的微分的值就是这一项,算出来正好是0的时候,如果这一项正好算出来是0,0乘上learning rate η还是0,所以你的参数就不会再移动位置,那假设我们是这个理想的状况,我们把w⁰更新到w¹,再更新到w²,最后更新到wᵗ有点卡,wᵗ卡住了,也就是算出来这个微分的值是0了,那参数的位置就不会再更新,</li></ul><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303205623086.png" alt="image-20210303205623086" style="zoom:67%;"><p>​你可能会马上发现说,Gradient Descent 这个方法,有一个巨大的问题,我们没有找到真正最好的解,<strong>我们没有找到那个,可以让Loss最小的那个w</strong>,在这个例子裡面,把w设定在右侧红点附近这个地方,你可以让loss最小,但是如果 Gradient Descent,是从W^0^这个地方,当作随机初始的位置的话,也很有可能走到W^T^这裡,你的训练就停住了,你就没有办法再移动w的位置。</p><p>​那右侧红点这一个位置,这个真的可以让loss最小的地方,叫做==global 的minima==,而W^T^这个地方叫做==local 的minima==,它的左右两边,都比这个地方的loss还要高一点,但是它不是整个error surface上面的最低点。</p><p>​所以常常可能会听到有人讲到,<strong>Gradient Descent,不是个好方法,这个方法会有local minima的问题</strong>,没有办法真的找到global minima,但教科书常常这样讲,农场文常常这样讲,但这个其实<strong>只是幻觉而已</strong>,事实上,假设你有做过深度学习相关的事情,假设你有自己训练network,自己做过Gradient Descent 经验的话,其实<strong>local minima是一个假问题</strong>,我们在做Gradient Descent 的时候,真正面对的难题不是local minima,到底是什麼,这个 我们之后会再讲到,在这边你就先接受,先相信多数人的讲法说,Gradient Descent,有local minima的问题,在这个图上在这个例子裡面,显然有local minima的问题,但之后会再告诉你说,Gradient Descent真正的痛点,到底是什麼。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303210927624.png" alt="image-20210303210927624" style="zoom:67%;"><p>​刚才举的例子,是只有一个参数的例子而已,那实际上<strong>我们刚才的模型有两个参数,有w跟b</strong>,那有两个参数的情况下,怎麼用Gradient Descent呢,其实跟刚才一个参数没有什麼不同,若一个参数你没有问题的话,你可以很快的推广到两个参数。</p><ul><li><p>我们现在有两个参数,都给它随机的初始的值,就是$w⁰$跟$b⁰$</p></li><li><p>你要计算w跟loss的微分,你要计算b对loss的微分,计算是在w等於w⁰的位置,b等於b₀的位置,在w等於w₀的位置,b等於b⁰的位置,你要计算w对L的微分,计算b对L的微分,<br>  $$<br>  \frac{∂L}{∂b} |(w=w^0,b=b^0 )<br>  $$</p><p>  $$<br>  \frac{∂L}{∂w} |(w=w^0,b=b^0 )<br>  $$</p><p>  计算完以后,就根据我们刚才,一个参数的时候的做法,去更新w跟b,把w⁰减掉learning rate,乘上微分的结果得到w¹,把b⁰减掉learning rate,乘上微分的结果得到b¹<br>  $$<br>  w^1←w^0-η \frac{∂L}{∂w} |(w=w^0,b=b^0 )<br>  $$</p></li></ul><p>$$<br>b^1←b^0-η \frac{∂L}{∂b} |(w=w^0,b=b^0 )<br>$$</p><p>​如果你不会算微分的话,不用紧张,在deep learning 的framework裡面,或在我们作业一,会用的pytorch裡面,算微分都是程式自动帮你算的,你就co一行 就写一行程式,自动就把微分的值就算出来了,你就算完全不知道自己在干嘛,也还是可以把微分的值算出来,所以这边,如果你根本就不知道微分是什麼,不用担心,这一步骤就是一行程式,这个等一下之后在做AE的时候,大家可以自己体验看看,那就是反覆同样的步骤,就不断的更新w跟b,然后期待最后,你可以找到一个最好的w,$w^*$ 跟最好的b $b^*$.</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303213346442.png" alt="image-20210303213346442" style="zoom:50%;"><p>​如果在这一个问题上,它操作起来是什麼样子,假设,你随便选一个初始的值在这个地方,那你就先计算一下w对L的微分,跟计算一下b对L的微分,然后接下来你就要更新w跟b,更新的方向就是w对L的微分,乘以η再乘以一个负号,b对L的微分,<strong>算出这个微分的值,你就可以决定更新的方向</strong>,你就可以决定w要怎麼更新,那<strong>把w跟b更新的方向结合起来,就是一个向量,就是这个红色的箭头</strong>,我们就从这个位置移到这个位置,</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303213607024.png" alt="image-20210303213607024" style="zoom:50%;"><p>​然后再计算一次微分,然后你再决定要走什麼样的方向,把这个微分的值乘上learning rate,再乘上负号,你就知道红色的箭头要指向那裡,你就知道怎麼移动w跟b的位置,一直移动一直移动一直移动,期待最后可以找出一组不错的w跟b,</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303213637960.png" alt="image-20210303213637960" style="zoom:50%;"><p>​那实际上真的用Gradient Descent,进行一番计算以后,这个是真正的数据,我们算出来的最好的w是0.97,最好的b是0.1k,跟我们的猜测蛮接近的,因為x₁的值可能跟y很接近,所以这个w就设一个接近1的值,b就设一个比较偏小的值,那loss多大呢,loss算一下是0.48k,也就是在2017到2020年的资料上,如果使用这一个函式,b代0.1k,w代0.97,那平均的误差是0.48k,也就是它的预测的观看人数误差,大概是500人次左右.</p><h2 id="Linear-Model"><a href="#Linear-Model" class="headerlink" title="Linear Model"></a>Linear Model</h2><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303214119428.png" alt="image-20210303214119428" style="zoom:67%;"><p>​那w跟b的值刚才已经找出来的,那这组w跟b可以让loss小到0.48k,但是这样,是一个让人满意或值得称道的结果吗,也许不是,因為==这三个步骤合起来==,叫做==训练==,<strong>我们现在是在,我们已经知道答案的资料上,去计算loss</strong>,我们其实已经知道2017到2020年,每天的观看次数 所以,其实我们现在其实只是在自high而已,就是假装我们不知道隔天的观看次数,然后拿这一个函式来进行预测,发现误差是0.48k。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303214426647.png" alt="image-20210303214426647" style="zoom:67%;"><p>​但是我们真正要在意的,我们不知道的,未来的观看的次数是多少,所以我们接下来要做的事情就是拿这个函式,来<strong>真的预测一下未来的观看次数</strong>,那这边,我们只有2017年到2020年的值,我们在2020年的最后一天,跨年夜的时候,找出了这个函式,接下来从2021年开始每一天,我们都拿这个函式,去预测隔天的观看人次,我们就拿2020年的12月31号的,观看人次,去预测2021年元旦的观看人次,用2021年元旦的观看人次,预测一下2021年元旦隔天,1月2号的观看人次,用1月2号的观看人次去预测,1月3号的观看人次,每天都做这件事,一直做到2月14号,就做到情人节,然后得到平均的值,平均的误差值是多少呢,这个是真实的数据的结果,在2021年没有看过的资料上,这个误差值是,我们这边用L prime来表示,它是0.58,所以在有看过的资料上,在训练资料上,误差值是比较小的,在没有看过的资料上,在2021年的资料上,看起来误差值是比较大的,那我们每一天的平均误差,有580人左右,600人左右。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303214752063.png" alt="image-20210303214752063" style="zoom:67%;"><p>​能不能够做得更好呢,在做得更好之前,我们先来分析一下结果</p><ul><li><strong>横轴是代表的是时间</strong>,所以0这个点 最左边的点,代表的是2021年1月1号,最右边点,代表的是2021年2月14号</li><li><strong>纵轴就是观看的人次</strong>,这边是用千人当作单位,</li><li><strong>红色的线</strong>是<strong>真实的观看人次</strong></li><li><strong>蓝色的线</strong>是机器用这一个函式,<strong>预测出来的观看人次</strong></li></ul><p>​你有发现很明显的,这蓝色的线没什麼神奇的地方,它几乎就是,红色的线往右平移一天而已,它其实也没做什麼特别厉害的预测,就把红色的线往右平移一天,因為这很合理,因為我们觉得,x₁也就是前一天的观看人次,跟隔天观看人次的,要怎麼拿前一天的观看人次,去预测隔天的观看人次呢,前一天观看人次乘以0.97,加上0.1k 加上100,就是隔天的观看人次,所以你会发现说,机器几乎就是拿前一天的观看人次来预测,隔天的观看人次,但是如果你仔细观察这个图,你就会发现,<strong>这个真实的资料有一个很神奇的现象,它是有週期性的</strong>,它每隔七天就会有两天特别低,<strong>两天观看的人特别少</strong>,那两天是什麼日子呢,那我发现那两天都固定,<strong>是礼拜五跟礼拜六</strong>,礼拜五跟礼拜六我可以了解,就礼拜五週末 大家出去玩,谁还要学机器学习,礼拜六谁还要学机器学习,那不知道為什麼,礼拜天大家去学机器学习,这个我还没有参透為什麼是这个样子,也许跟youtube背后,神奇的演算法有关係,比如说youtube都会推频道的影片,也许youtube在推频道的影片的时候,它都选择礼拜五礼拜六不推,只推礼拜天到礼拜四,可是為什麼推礼拜天到礼拜四呢,这个我也不了解,但是反正看出来的结果,我们看真实的数据,就是这个样子,每隔七天一个循环,每个礼拜五礼拜六,看的人就是特别少。所以既然我们已经知道每隔七天,就是一个循环,那这一个式子 这一个model,显然很烂,因為它只能够看前一天。</p><p>​<strong>每隔七天它一个循环</strong>,如果我们<strong>一个模型,它是参考前七天的资料</strong>,把七天前的资料,直接复製到拿来当作预测的结果,也许预测的会更準也说不定,所以我们就要修改一下我们的模型,通常一个模型的修改,往往来自於你对这个问题的理解,也就是<strong>Domain Knowledge</strong>。</p><p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303215641873.png" alt="image-20210303215641873"></p><p>​所以一开始,我们对问题完全不理解的时候,我们就胡乱写一个<br>$$<br>y=b+wx_1<br>$$<br>​并没有做得特别好,接下来我们观察了真实的数据以后,得到一个结论是,每隔七天有一个循环,所以我们应该要把,前七天的观看人次都列入考虑,所以我们写了一个新的模型,</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303220220964.png" alt="image-20210303220220964" style="zoom: 33%;"><p>​xⱼ代表什麼,这个下标j代表是几天前,然后这个j等於1到7,也就是从一天前两天前,一直考虑到七天前,那七天前的资料,通通乘上不同的weight,乘上不同的wⱼ,加起来,再加上bias,得到预测的结果,</p><p>​如果这个是我们的model,那我们得到的结果是怎麼样呢,我们在训练资料上的loss是0.38k,那因為这边只考虑一天,这边考虑七天,所以在训练资料上,你会得到比较低的loss,这边考虑了比较多的资讯,在训练资料上你应该要得到更好的,更低的loss,这边算出来是0.38k,但它在没有看过的资料上面,做不做得好呢,在没有看到的资料上,有比较好,是0.49k,所以刚才只考虑一天是0.58k的误差,考虑七天是0.49k的误差。</p><p>​那这边每一个w跟b,我们都会用Gradient Descent,算出它的最佳值,它的最佳值长什麼样子呢,这边show出来,给你看 它的最佳值长这样,当然机器的逻辑我是有点没有办法了解,我本来以為它会选七天前的数据,七天前的观看人数,直接复製过来,我看来它没有这样选就是了。</p><img src="https://gitee.com/unclestrong/deep-learning21_note/raw/master/imgbed/image-20210303220426230.png" alt="image-20210303220426230" style="zoom:67%;"><p>​它的逻辑是前一天,跟你要预测的隔天的数值的关係很大,所以w₁*是0.79,那不知道為什麼 它还考虑前三天,前三天是0.12,然后前六天是0.3,前七天是0.18,不过它知道说,如果是前两天前四天前五天,它的值会跟未来我们要预测的,隔天的值是成反比的,所以w₂ w₄跟w₅它们最佳的值,让Loss可以在训练资料上,是0.38k的值 是负的,但是w₁ w₃ w₆跟w₇是正的,我们考虑前七天的值,那你可能会问说,能不能够考虑更多天呢,可以,那这个轻易的改考虑更多天,本来是考虑前七天</p><p>​然后考虑28天会怎麼样呢,28天就一个月,考虑前一个月每一天的观看人次,去预测隔天的观看人次,预测出来结果怎样呢,训练资料上是0.33k,那在2021年的资料上,在没有看过的资料上是0.46k,看起来又更好一点 好 28天,好那接下来考虑56天会怎麼样呢,在训练资料上是稍微再好一点,是0.32k,在没看过的资料上还是0.46k,看起来,考虑更多天没有办法再更进步了,看来考虑天数这件事,也许已经到了一个极限,好那这边这些模型,它们都是把输入的这个x,这个x 还记得它叫什麼吗,它叫做feature,把feature乘上一个weight,再加上一个bias就得到预测的结果,这样的模型有一个共同的名字,叫做==Linear model==,那我们接下来会看,怎麼把Linear model做得更好。</p>]]></content>
      
      
      <categories>
          
          <category> 深度学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 深度学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>QUICK——图片重命名</title>
      <link href="/2022/05/05/quick-tu-pian-chong-ming-ming/"/>
      <url>/2022/05/05/quick-tu-pian-chong-ming-ming/</url>
      
        <content type="html"><![CDATA[<p>一般文件夹里的图片都会自动生成后缀，图片很多的时候，每一个图片都重命名显然很不现实。因此，考虑结合windows的批处理命令实现自动重命名。</p><ul><li><p>随便单击一张图片，然后Ctrl+A就可以全选图片，选择第一个图片然后右键选择“重命名”</p></li><li><p>不输入任何字符，直接回车，你会发现所有图片的名字变成了（1） （2）（3）（4），带有括号的图片名称</p></li><li><p>接下来就是去除括号，去除括号的代码如下</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml">@Echo Off<span class="token important">&amp;SetLocal</span> ENABLEDELAYEDEXPANSIONFOR %%a in (<span class="token important">*)</span> do (set "name=%%a"set "name=<span class="token tag">!name:(=</span><span class="token tag">!</span>"set "name=<span class="token tag">!name:)=</span><span class="token tag">!</span>"ren "%%a" "<span class="token tag">!name</span><span class="token tag">!</span>")exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>在图片的文件夹里设置，需要除括号的文件夹里新建一个文本文档，双击打开，输入以上代码。</p></li><li><p>保存关闭文本文档，把文本文档的后缀改成 .bat</p></li><li><p>双击 .bat文件，文件内所有的括号就都被去除了</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> QUICK </category>
          
      </categories>
      
      
        <tags>
            
            <tag> QUICK </tag>
            
            <tag> WIN10 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo主题优化————美化布局</title>
      <link href="/2022/05/05/hexo-zhu-ti-you-hua-mei-hua-bu-ju/"/>
      <url>/2022/05/05/hexo-zhu-ti-you-hua-mei-hua-bu-ju/</url>
      
        <content type="html"><![CDATA[<p>主题个性化的一些配置，主要修改页面颜色、样式、布局等。以matery为例。<br>matery主题下载：<a href="https://github.com/blinkfox/hexo-theme-matery">matery</a></p><span id="more"></span><h3 id="图标"><a href="#图标" class="headerlink" title="图标"></a>图标</h3><p>图标icon 可以在<a href="https://fontawesome.com/icons">Font Awesome</a> 中查找。<br>以下是常用社交图标的标识，供你参考：</p><ul><li>Facebook: <code>fab fa-facebook</code></li><li>Twitter: <code>fab fa-twitter</code></li><li>Google-plus: <code>fab fa-google-plus</code></li><li>Linkedin: <code>fab fa-linkedin</code></li><li>Tumblr: <code>fab fa-tumblr</code></li><li>Medium: <code>fab fa-medium</code></li><li>Slack: <code>fab fa-slack</code></li><li>Sina Weibo: <code>fab fa-weibo</code></li><li>Wechat: <code>fab fa-weixin</code></li><li>QQ: <code>fab fa-qq</code></li><li>Zhihu: <code>fab fa-zhihu</code></li></ul><p>用到图标的地方：</p><ul><li>_config.yml menu 菜单栏<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">menu</span><span class="token punctuation">:</span>  <span class="token key atrule">Index</span><span class="token punctuation">:</span>    <span class="token key atrule">url</span><span class="token punctuation">:</span> /    <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>home   <span class="token punctuation">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>首页 banner 中的第二个按钮的配置，包括按钮的显示名称、font awesome图标和按钮的超链接.<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">indexbtn</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> Github  <span class="token key atrule">icon</span><span class="token punctuation">:</span> fab fa<span class="token punctuation">-</span>github<span class="token punctuation">-</span>alt  <span class="token key atrule">url</span><span class="token punctuation">:</span> https<span class="token punctuation">:</span>//github.com/ShoreSouth<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li>在“关于”页面配置”我的项目”信息<pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">myProjects</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">data</span><span class="token punctuation">:</span>    <span class="token key atrule">hexo-theme-matery</span><span class="token punctuation">:</span>      <span class="token key atrule">icon</span><span class="token punctuation">:</span> fas fa<span class="token punctuation">-</span>file<span class="token punctuation">-</span>alt    <span class="token punctuation">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="特效"><a href="#特效" class="headerlink" title="特效"></a>特效</h3><h4 id="点击页面的’爱心’效果"><a href="#点击页面的’爱心’效果" class="headerlink" title="点击页面的’爱心’效果"></a>点击页面的’爱心’效果</h4><p>目录<code>_config.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">clicklove</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token comment"># | 文件名             | 说明                   |</span><span class="token comment"># | :----------------- | :--------------------- |</span><span class="token comment"># | sakura-small.js    | 少量樱花               |</span><span class="token comment"># | sakura-half.js     | 樱花相对原效果数量减半 |</span><span class="token comment"># | sakura-reduce.js   | 樱花相对原效果减少1/4  |</span><span class="token comment"># | sakura.js          | 樱花数量不变（原效果） |</span><span class="token comment"># 默认是sakura.js，如需修改，请到下面地址修改</span><span class="token comment"># libs</span><span class="token comment">#   js:</span><span class="token comment">#     sakura: /libs/others/sakura-reduce.js</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="页面樱花效果"><a href="#页面樱花效果" class="headerlink" title="页面樱花效果"></a>页面樱花效果</h4><p>目录<code>_config.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">sakura</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="页面鼠标星星跟随效果"><a href="#页面鼠标星星跟随效果" class="headerlink" title="页面鼠标星星跟随效果"></a>页面鼠标星星跟随效果</h4><p>目录<code>_config.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">mouseStar</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token comment"># 是否激活页面飘雪效果, 只在桌面版网页启用特效</span><span class="token key atrule">snowdown</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="背景canvas-nest"><a href="#背景canvas-nest" class="headerlink" title="背景canvas-nest"></a>背景canvas-nest</h4><p>目录<code>_config.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">canvas_nest</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">color</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span> <span class="token comment"># 线条颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割</span>  <span class="token key atrule">pointColor</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span> <span class="token comment"># 交点颜色, 默认: '0,0,0' ；三个数字分别为(R,G,B)，注意用,分割</span>  <span class="token key atrule">opacity</span><span class="token punctuation">:</span> <span class="token number">0.7</span> <span class="token comment"># 线条透明度（0~1）, 默认: 0.5</span>  <span class="token key atrule">zIndex</span><span class="token punctuation">:</span> <span class="token number">-1</span> <span class="token comment"># 背景的 z-index 属性，css 属性用于控制所在层的位置, 默认: -1.</span>  <span class="token key atrule">count</span><span class="token punctuation">:</span> <span class="token number">99</span> <span class="token comment"># 线条的总数量, 默认: 99</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="背景静止彩带"><a href="#背景静止彩带" class="headerlink" title="背景静止彩带"></a>背景静止彩带</h4><p>目录<code>_config.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">ribbon</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">size</span><span class="token punctuation">:</span> <span class="token number">150</span> <span class="token comment"># 彩带大小, 默认: 90.</span>  <span class="token key atrule">alpha</span><span class="token punctuation">:</span> <span class="token number">0.6</span> <span class="token comment"># 彩带透明度 (0 ~ 1), 默认: 0.6.</span>  <span class="token key atrule">zIndex</span><span class="token punctuation">:</span> <span class="token number">-1</span> <span class="token comment"># 背景的z-index属性，css属性用于控制所在层的位置, 默认: -1.</span>  <span class="token key atrule">clickChange</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token comment"># 设置是否每次点击都更换彩带.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="背景动态彩带"><a href="#背景动态彩带" class="headerlink" title="背景动态彩带"></a>背景动态彩带</h4><p>目录<code>_config.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">ribbon_dynamic</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>从 Hexo5.0 版本开始自带了 <code>prismjs</code> 代码语法高亮的支持，本主题对此进行了改造支持。</p><p>如果你的博客中曾经安装过 <code>hexo-prism-plugin</code> 的插件，那么你须要执行 <code>npm uninstall hexo-prism-plugin</code> 来卸载掉它，否则生成的代码中会有 <code>&amp;#123;</code> 和 <code>&amp;#125;</code> 的转义字符。</p><p>然后，修改 Hexo 根目录下 <code>_config.yml</code> 文件中 <code>highlight.enable</code> 的值为 <code>false</code>，并将 <code>prismjs.enable</code> 的值设置为 <code>true</code>，主要配置如下：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">highlight</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">auto_detect</span><span class="token punctuation">:</span> <span class="token boolean important">false</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span>  <span class="token key atrule">wrap</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">hljs</span><span class="token punctuation">:</span> <span class="token boolean important">false</span><span class="token key atrule">prismjs</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">preprocess</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">line_number</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">tab_replace</span><span class="token punctuation">:</span> <span class="token string">''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>主题中默认的 <code>prismjs</code> 主题是 <code>Tomorrow Night</code>，如果你想定制自己的主题，可以前往 <a href="https://prismjs.com/download.html">prismjs 下载页面</a> 定制下载自己喜欢的主题 <code>css</code> 文件，然后将此 css 主题文件取名为 <code>prism.css</code>，替换掉 <code>hexo-theme-matery</code> 主题文件夹中的 <code>source/libs/prism/prism.css</code> 文件即可。</p><h3 id="添加emoji表情支持（可选的）"><a href="#添加emoji表情支持（可选的）" class="headerlink" title="添加emoji表情支持（可选的）"></a>添加emoji表情支持（可选的）</h3><p>本主题新增了对<code>emoji</code>表情的支持，使用到了 <a href="https://npm.taobao.org/package/hexo-filter-github-emojis">hexo-filter-github-emojis</a> 的 Hexo 插件来支持 <code>emoji</code>表情的生成，把对应的<code>markdown emoji</code>语法（<code>::</code>,例如：<code>:smile:</code>）转变成会跳跃的<code>emoji</code>表情，安装命令如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> <span class="token function">install</span> hexo-filter-github-emojis --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在 Hexo 根目录下的 <code>_config.yml</code> 文件中，新增以下的配置项：</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">githubEmojis</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">className</span><span class="token punctuation">:</span> github<span class="token punctuation">-</span>emoji  <span class="token key atrule">inject</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">styles</span><span class="token punctuation">:</span>  customEmojis<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行 <code>hexo clean &amp;&amp; hexo g</code> 重新生成博客文件，然后就可以在文章中对应位置看到你用<code>emoji</code>语法写的表情了。</p><h3 id="修改打赏的二维码图片"><a href="#修改打赏的二维码图片" class="headerlink" title="修改打赏的二维码图片"></a>修改打赏的二维码图片</h3><p>在主题文件的 <code>source/medias/reward</code> 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h3 id="配置网站favicon和网站LOGO"><a href="#配置网站favicon和网站LOGO" class="headerlink" title="配置网站favicon和网站LOGO"></a>配置网站favicon和网站LOGO</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">favicon</span><span class="token punctuation">:</span> /favicon.png<span class="token key atrule">logo</span><span class="token punctuation">:</span> /medias/logo.png<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="修改主题颜色"><a href="#修改主题颜色" class="headerlink" title="修改主题颜色"></a>修改主题颜色</h3><p>在主题文件的 <code>/source/css/matery.css</code> 文件中，搜索 <code>.bg-color</code> 来修改背景颜色：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */</span><span class="token selector">.bg-color</span> <span class="token punctuation">{</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to right<span class="token punctuation">,</span> #4cbf30 0%<span class="token punctuation">,</span> #0f9d58 100%<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>   <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span class="token atrule"><span class="token rule">@keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token comment">/* 动态切换背景颜色. */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改-banner-图"><a href="#修改-banner-图" class="headerlink" title="修改 banner 图"></a>修改 banner 图</h3><p>你可以直接在 <code>/source/medias/banner</code> 文件夹中更换你喜欢的 <code>banner</code> 图片，主题代码中是每天动态切换一张，只需 <code>7</code> 张即可。如果你会 <code>JavaScript</code> 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，<code>banner</code> 切换的代码位置在 <code>/layout/_partial/bg-cover-content.ejs</code> 文件的 <code>&lt;script&gt;&lt;/script&gt;</code> 代码中：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'.bg-cover'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">css</span><span class="token punctuation">(</span><span class="token string">'background-image'</span><span class="token punctuation">,</span> <span class="token string">'url(/medias/banner/'</span> <span class="token operator">+</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'.jpg)'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="修改文章特色图"><a href="#修改文章特色图" class="headerlink" title="修改文章特色图"></a>修改文章特色图</h3><p>在 <code>/source/medias/featureimages</code> 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 <code>_config.yml</code> 做同步修改。</p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">featureImages</span><span class="token punctuation">:</span><span class="token punctuation">-</span> /medias/featureimages/0.jpg<span class="token punctuation">-</span> /medias/featureimages/1.jpg<span class="token punctuation">-</span> /medias/featureimages/2.jpg<span class="token punctuation">...</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="打字效果副标题"><a href="#打字效果副标题" class="headerlink" title="打字效果副标题"></a>打字效果副标题</h3><p>目录<code>_config.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">subtitle</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">loop</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 是否循环</span>  <span class="token key atrule">showCursor</span><span class="token punctuation">:</span> <span class="token boolean important">true</span> <span class="token comment"># 是否显示光标</span>  <span class="token key atrule">startDelay</span><span class="token punctuation">:</span> <span class="token number">300</span> <span class="token comment"># 开始延迟</span>  <span class="token key atrule">typeSpeed</span><span class="token punctuation">:</span> <span class="token number">100</span> <span class="token comment"># 打字速度</span>  <span class="token key atrule">backSpeed</span><span class="token punctuation">:</span> <span class="token number">50</span> <span class="token comment"># 删除速度</span>  <span class="token key atrule">sub</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> 从来没有真正的绝境<span class="token punctuation">,</span> 只有心灵的迷途    <span class="token punctuation">-</span> Never really desperate<span class="token punctuation">,</span> only the lost of the soul<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="网站背景图"><a href="#网站背景图" class="headerlink" title="网站背景图"></a>网站背景图</h3><p>目录<code>_config.yml</code></p><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">background</span><span class="token punctuation">:</span>  <span class="token key atrule">enable</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>  <span class="token key atrule">url</span><span class="token punctuation">:</span> <span class="token string">"https://cdn.jsdelivr.net/gh/Tokisaki-Galaxy/res/site/medias/background.jpg"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="背景图遮罩"><a href="#背景图遮罩" class="headerlink" title="背景图遮罩"></a>背景图遮罩</h3><p>默认情况下，首页背景图被动态变化的颜色遮罩(css效果)。<br>定位目录<code>/matery/source/css/matery.css</code>。<br>修改渐变颜色：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token atrule"><span class="token rule">@-webkit-keyframes</span> rainbow</span> <span class="token punctuation">{</span>    <span class="token selector">0%,    100%</span> <span class="token punctuation">{</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>156<span class="token punctuation">,</span> 39<span class="token punctuation">,</span> 176<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>156<span class="token punctuation">,</span> 39<span class="token punctuation">,</span> 176<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>156<span class="token punctuation">,</span> 39<span class="token punctuation">,</span> 176<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-moz-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>156<span class="token punctuation">,</span> 39<span class="token punctuation">,</span> 176<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>156<span class="token punctuation">,</span> 39<span class="token punctuation">,</span> 176<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>156<span class="token punctuation">,</span> 39<span class="token punctuation">,</span> 176<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>156<span class="token punctuation">,</span> 39<span class="token punctuation">,</span> 176<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">16%</span> <span class="token punctuation">{</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>132<span class="token punctuation">,</span> 13<span class="token punctuation">,</span> 121<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>132<span class="token punctuation">,</span> 13<span class="token punctuation">,</span> 121<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>132<span class="token punctuation">,</span> 13<span class="token punctuation">,</span> 121<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-moz-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>132<span class="token punctuation">,</span> 13<span class="token punctuation">,</span> 121<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>132<span class="token punctuation">,</span> 13<span class="token punctuation">,</span> 121<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>132<span class="token punctuation">,</span> 13<span class="token punctuation">,</span> 121<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>132<span class="token punctuation">,</span> 13<span class="token punctuation">,</span> 121<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">32%</span> <span class="token punctuation">{</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 83<span class="token punctuation">,</span> 80<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 83<span class="token punctuation">,</span> 80<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 83<span class="token punctuation">,</span> 80<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-moz-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 83<span class="token punctuation">,</span> 80<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 83<span class="token punctuation">,</span> 80<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 83<span class="token punctuation">,</span> 80<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>239<span class="token punctuation">,</span> 83<span class="token punctuation">,</span> 80<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">48%</span> <span class="token punctuation">{</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 87<span class="token punctuation">,</span> 34<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 87<span class="token punctuation">,</span> 34<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 87<span class="token punctuation">,</span> 34<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-moz-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 87<span class="token punctuation">,</span> 34<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 87<span class="token punctuation">,</span> 34<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 87<span class="token punctuation">,</span> 34<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 87<span class="token punctuation">,</span> 34<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">64%</span> <span class="token punctuation">{</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 160<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 160<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 160<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-moz-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 160<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 112<span class="token punctuation">,</span> 66<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 160<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>255<span class="token punctuation">,</span> 160<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector">80%</span> <span class="token punctuation">{</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 30<span class="token punctuation">,</span> 99<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>45deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 30<span class="token punctuation">,</span> 99<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 30<span class="token punctuation">,</span> 99<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-moz-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 30<span class="token punctuation">,</span> 99<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 30<span class="token punctuation">,</span> 99<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">-webkit-linear-gradient</span><span class="token punctuation">(</span>135deg<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>2233<span class="token punctuation">,</span> 30<span class="token punctuation">,</span> 99<span class="token punctuation">,</span> 0.75<span class="token punctuation">)</span> 0%<span class="token punctuation">,</span> <span class="token function">rgba</span><span class="token punctuation">(</span>233<span class="token punctuation">,</span> 30<span class="token punctuation">,</span> 99<span class="token punctuation">,</span> 0.65<span class="token punctuation">)</span> 100%<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>若不想要此功能，可以直接注释掉<code>.bg-cover:afte</code>类中的<code>content</code>：</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.bg-cover:after</span> <span class="token punctuation">{</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token comment">/* content: ""; */</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Markdown写作</title>
      <link href="/2022/05/04/markdown-shi-yong/"/>
      <url>/2022/05/04/markdown-shi-yong/</url>
      
        <content type="html"><![CDATA[<h1 id="为什么要写作，为什么要发表？"><a href="#为什么要写作，为什么要发表？" class="headerlink" title="为什么要写作，为什么要发表？"></a>为什么要写作，为什么要发表？</h1><p>写作是一种表达方式，像您这么有才的人肯定有很多东西想表达。</p><p>比如你有什么新想法，新点子，洗澡的时候突然想到的，然后第二天就忘了。<br>再比如，今天研究过程中遇到了什么难题，费了好大好大劲找到了一个绝妙的方法，然后过两天你又遇到了这个问题。<br>或者，有个师弟来跟你请教了些问题，你耐心的解答了，第二天，又来了个师妹问你这个问题。<br>或者，你吃饭时，跟别人扯了个故事，一桌的人都觉得精彩，结果也就这么几个人知道这个传说。<br>也许，你就是想多年后回头，能够再次感受那充满激情的科研时光，记忆要是能够再清晰一点多好。</p><p>如果，你经常写作，是不是人生都不一样了。</p><p>写作作为一种表现形式，我觉得是最适合科研工作者的一种表现形式。现在人人都是content creator，尤其是youtube和抖音的流行，导致现在最流行的一种表现形式时视频。视频确实有他的特点，就是消费方便，看一个视频感觉好轻松，但是视频做起来却很复杂。这就导致了视频，没法天天做，前面说到的那些情景很多，视频就没法满足。写作的阻力就小很多，我可以每天写，有灵感的时候马上就写。写很灵活，5分钟能写一篇，15分钟也能写一篇，10个小时也可以。写作也比视频正式，更能让人静下心来认真品味。而那些随意的短视频，随手一滑就过去了，占用了时间却没有有任何收获。相比消费视频，消费文章需要更多的投入，这也也是一大优势，你能过滤掉那些不动脑子人，而激发那些渴望知识的人的欲望（我后面会写一篇文章详细介绍其中的科学原理）。</p><p>你现在应该发现了即使不发表，写作也有很多好处。 那为什么要发表呢？</p><p>这里我要提一个词：Influencer，影响者。我觉得这是一个由能力有想法的人最应该成为的角色。做一个influencer，你可以最大化你的贡献。从个人的角度触发，当有任知道并且认同、支持、感激你的想法的时候，我觉得这是最有生就感的事情。当然你的想法也不是100%都能被人接受，当有人给你提出意见反馈的时候也是提升自我的机会。同时你的作品也许能给你带了和作者，合作机会等等。你看看现在那些比较大的influencer，都是谁，什么卖口红的，打游戏，作为科研工作者，你不觉得你有义务影响一下这个世界吗？</p><p>总之写作好，发表好。</p><h1 id="为什么要用Markdown写作？"><a href="#为什么要用Markdown写作？" class="headerlink" title="为什么要用Markdown写作？"></a>为什么要用Markdown写作？</h1><p>Markdown是一种轻量化文本标记语言，这么说你可能有点懵。这么说，Markdown是一种格式，一种非常简单的，让作者可以充分关注写作内容的格式。使用Markdown，不需要排版，因为他根本就没有这个功能。你只要关心内容，只管写就可以了，Markdown渲染器，会让他变成一篇简洁清爽的文章，读者读起来也会非常舒爽。你现在看到的这篇文章就是Markdown写的。</p><p>Markdown他虽然简单，但是它可以实现很多厉害的功能，例如方便点的编写易于阅读的代码、方便地插入公式等等。在使用合适的工具下Markdown写作体验远远超过Word。我现在只有写那些什么报告，申请那些官文采用word，其他时候都用Markdown。</p><h2 id="安装Markdown相关的各种插件"><a href="#安装Markdown相关的各种插件" class="headerlink" title="安装Markdown相关的各种插件"></a>安装Markdown相关的各种插件</h2><ol><li><p>Markdown All in One 这个辅助Markdown写作的。</p></li><li><p>Markdown PDF 这个可以把Markdown渲染成PDF，这样你可以发给不会使用Markdown的人阅读。</p></li><li><p>Paste Image 这个允许你直接将图片粘贴到Markdown文件。</p></li><li><p>Code Spell Checker 这个是拼写检查，帮你找错别字的，这个是支持英文，需要中文的话可以使用Spell Right，不过不知为啥在某些电脑上不能用。</p></li><li><p>LimfxCodeEx 这个允许你快速的发表你写的文章，是改变你写作人生的一个神器。</p><h1 id="Markdown的基本格式"><a href="#Markdown的基本格式" class="headerlink" title="Markdown的基本格式"></a>Markdown的基本格式</h1><p>Markdown写起来非常顺畅，因为格式是直接使用标记实现的，而且很少，所以写的时候，不用考虑很多格式相关的东西，全称可以不离开键盘。</p><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><p>只要在文字前面打上#空格就可以，这一行的文字就会变成标题，#的个数代表标题的级别。</p><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"># 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="段落"><a href="#段落" class="headerlink" title="段落"></a>段落</h2><p> 这里介绍一下段落，就是paragraphs。我们在写的时候如果按下enter，我们代码会换一行，但是实际渲染出来并不会换行：</p></li></ol><p>第一段话<br>第二段话</p><p>那要怎么开启新的一段呢？需要空一行，代笔新的一段：</p><p>第一段话</p><p>第二段话</p><h2 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h2><p>强调有两种一种是 <em>斜体</em> ,一种是 <strong>加粗</strong>。分别用* * / ** **。 快捷键crtl+i/crtl+b。</p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><p>列表分为顺序编号和无编号。</p><ol><li>这是一级列表</li><li>有编号的列表<ol><li>这是二级列表</li><li>可以用tab和tab+shift/Backspace缩进<ol><li>从1开始，数字+’.’+’空格’</li></ol></li></ol></li></ol><ul><li>这是无编号的列表</li></ul><ul><li>用-号也可以</li></ul><ul><li>用+号也可以<h2 id="插入图片"><a href="#插入图片" class="headerlink" title="插入图片"></a>插入图片</h2>推荐您把图片复制到您文章目录下，用下面得语法加入图片。</li></ul><p><code>![图片名称](imageFile.png)</code>  </p><p>除了文件名，其他的描述和caption都是可选的。描述就是你把鼠标停留在图片上显示出来的字，也是图片无法加载时显示的文字。</p><p>要注意的是如果你使用了Markdown All in One，你在打出![](之后他会弹出自动补全帮你快速输入图片文件名。</p><p>如果这个你觉得麻烦还记得我们之前安装的Paste Image插件吗？只要你在别处复制一幅图，例如用QQ截图截图，然后在要插入的地方按ctrl+alt+v将图片粘贴插入。</p><p><img src="/17.jpg" alt="sights"></p><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><p>公式是Markdown的亮点，因为它支持Latex格式公式，虽然新版的Word也支持了，不过还是Markdown写起来流畅。</p><p>首先我们有inline公式只要在文中输入两个美元符号，之间的内容就是公示了，注意美元符号要和前后的文本之间有个空格，确保兼容性：$\lim_{x \to \infin}f(x)$。<br><code>$\lim_{x \to \infin}f(x)$</code></p><p>当然你也可以写独立的公式就是一对美元符号之间的内容：<br>$$<br>\lim_{x \to 0}\frac{sin(t)}{x}=1<br>$$</p><pre class="line-numbers language-none"><code class="language-none">$$\lim_{x \to 0}\frac{sin(t)}{x}=1$$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>可以看到公式是线性写的，你在纸上怎么写就在这里怎么写， \ 后面可以跟特殊的符号、希腊字母等，_ 和 ^分别对应上下标，{}可以把符号变成一组例如：$x^a<em>b$ 和 $x^{a</em>b}$ 这种区别: x^a<em>bx a∗b 和 x^{a</em>b}x a∗b。 再公式重要换行的话需要输入一行\，可以输入\tag{1}给公式编号。</p><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>表格略有点麻烦：</p><table><thead><tr><th>Markdown</th><th align="center">Less</th><th align="right">Pretty</th></tr></thead><tbody><tr><td><em>默认左对齐</em></td><td align="center"><code>此列剧中</code></td><td align="right"><strong>此列右对齐</strong></td></tr><tr><td>1</td><td align="center">2</td><td align="right">3</td></tr><tr><td>11</td><td align="center">22</td><td align="right">33</td></tr></tbody></table><p>首先用 | 来定义列，— | :—: | —:这个放在第一列下面用于区分表头，冒号的位置用来决定事剧中还是右对齐、左对齐。</p><p>有个简单的玩法就是：Markdown Tables Generator</p><p>在这里你可以把word，excel里面的表格直接粘贴到网页中，然后生成对应的整齐的Markdown表格。</p><h2 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h2><p>链接可以连接到网上某个url网址，如果是下面这个语法：</p><pre class="line-numbers language-none"><code class="language-none">[google](https://www.google.com/)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果使用Markdown All in One,则可复制一个合法的url，然后选中某个文字直接粘贴变成一个链接。</p><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>我们平时会使用到代码，Markdown最闪耀的就是渲染代码里，如果渲染器支持可以实现各种语言语法的高亮。首先是inline代码，只要再行中写两个``之间的就会被认为是代码，不会被Markdown渲染格式。但是inline代码不支持指定语言。你可以这么写：</p><p><code>python s = "Python syntax highlighting" print s </code></p><p><code>javascript var s = "JavaScript syntax highlighting"; alert(s); </code></p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>由于Markdown本身是一种代码，需要渲染才能够看着比较舒服，所以如果你发给不会使用Markdown的人可能会有困扰。我们之前装了Markdown PDF，因此可以输出成PDF、图片、网页等等渲染过的格式。只需要再md文件编辑的地方点击右键就可以看到输出成PDF等选项了。</p><p>注意，Markdown PDF树池不支持公式渲染，大家可以使用pandoc插件输出，那个很强大，还可以输出为Word文档。除了插件，你还需要安装Pandoc这个软件。只需要按下ctrl+shift+p，在命令框中输入pandoc render，剩下的自己就能看明白了。</p><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><p>分割线：很简单，单独一段就打上三个减号：—</p><hr><p>引用：在需要有用的一行前加上&gt;:</p><blockquote><p>这是引用</p></blockquote><blockquote><p>这也是哦</p></blockquote><p>其他还有的我就不介绍了大家自己摸索，注意Markdown没有什么字体类型、颜色、大小的设置，只有标题级别段落。所以说他是以内容为中心的写作方式。</p>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+github————个人博客搭建</title>
      <link href="/2022/05/04/ge-ren-bo-ke-da-jian/"/>
      <url>/2022/05/04/ge-ren-bo-ke-da-jian/</url>
      
        <content type="html"><![CDATA[<p>本人博客：<a href="https://shoresouth.github.io/">https://shoresouth.github.io/</a><br>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。</p><span id="more"></span><h2 id="安装相关工具"><a href="#安装相关工具" class="headerlink" title="安装相关工具"></a>安装相关工具</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><h4 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h4><p>node.js下载官网: <a href="http://nodejs.cn/download/">nodejs官网</a></p><h4 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h4><pre class="line-numbers language-none"><code class="language-none">node -v 显示安装的nodejs版本npm -v 显示安装的npm版本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="修改全局模块下载路径"><a href="#修改全局模块下载路径" class="headerlink" title="修改全局模块下载路径"></a>修改全局模块下载路径</h4><ol><li>我希望将全模块所在路径和缓存路径放在我node.js安装的文件夹中，则在我安装的文件夹[D:\Nodejs]下创建两个文件夹[node_global]及[node_cache]</li><li>创建完两个空文件夹之后，打开命令行界面，输入下面命令:<pre class="line-numbers language-none"><code class="language-none">npm config set prefix "D:\Nodejs\node_global"npm config set cache "D:\Nodejs\node_cache"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li>修改系统环境变量</li></ol><ul><li>将【用户变量】下的【Path】修改为【D:\Nodejs\node_global】，之后点击确定。</li><li>在【系统变量】下新建【NODE_PATH】【D:\Nodejs\node_global\node_modules】</li><li>在【系统变量】下的【Path】新建添加【%NODE_HOME%】和node全局文件夹【D:\Nodejs\node_global】，之后点击确定。</li></ul><p>经过上面的步骤，nodejs下载的模块就会自动下载到我们自定义的目录，接下来我们测试一下。输入下面的命令：</p><pre class="line-numbers language-none"><code class="language-none">npm install express -g     # -g是全局安装的意思，不加 -g 就是默认下载到当前目录<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>注：</strong> 可能由于权限的原因出现报错，右击Nodejs文件夹-&gt;属性-&gt;安全，点击编辑，将所有权限都✔即可。</p><h4 id="更换npm源为淘宝镜像"><a href="#更换npm源为淘宝镜像" class="headerlink" title="更换npm源为淘宝镜像"></a>更换npm源为淘宝镜像</h4><p>说明：npm 默认的 registry ,也就是下载 npm 包时是从国外的服务器下载，国内很慢，一般都会指向淘宝 <a href="https://registry.npm.taobao.org./">https://registry.npm.taobao.org。</a></p><pre class="line-numbers language-none"><code class="language-none">npm config get registry //查看npm源npm config set registry https://registry.npm.taobao.org/ //更换镜像为淘宝镜像<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="全局安装基于淘宝源的cnpm"><a href="#全局安装基于淘宝源的cnpm" class="headerlink" title="全局安装基于淘宝源的cnpm"></a>全局安装基于淘宝源的cnpm</h4><p>说明：由于npm的服务器在海外，所以访问速度比较慢，访问不稳定 ，cnpm的服务器是由淘宝团队提供服务器在国内cnpm是npm镜像，一般会同步更新，相差在10分钟，所以cnpm在安装一些软件时候会比较有优势。但是一般cnpm只用于安装时候，在项目创建与卸载等相关操作时候我们还是使用npm。</p><pre class="line-numbers language-none"><code class="language-none">全局安装基于淘宝源的cnpmnpm install -g cnpm --registry=https://registry.npm.taobao.org查看cnpm是否安装成功cnpm -v<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h3><p>Git是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。也是Linus Torvalds为了帮助管理Linux内核开发而开发的一个开放源码的版本控制软件。</p><h4 id="安装环境-1"><a href="#安装环境-1" class="headerlink" title="安装环境"></a>安装环境</h4><p>git官网：<a href="https://git-scm.com/">Git</a></p><h4 id="验证安装-1"><a href="#验证安装-1" class="headerlink" title="验证安装"></a>验证安装</h4><pre class="line-numbers language-none"><code class="language-none">git --version   <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><pre class="line-numbers language-none"><code class="language-none">git config -l  //查看所有配置git config --system --list //查看系统配置git config --global --list //查看用户（全局）配置git config –global core.editor vim （编辑器名） //修改默认编辑器git config --global user.name  "自己的用户名" //配置用户名git config --global user.emal  "自己的邮箱" //配置邮箱<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><h4 id="安装环境-2"><a href="#安装环境-2" class="headerlink" title="安装环境"></a>安装环境</h4><p>必须按照步骤来，因为hexo需要使用node.js的npm命令。</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-cli // 下载hexohexo -v // 查看是否安装成功hexo init // 初始化hexo文件夹npm install // 下载模块依赖<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="搭建个人博客"><a href="#搭建个人博客" class="headerlink" title="搭建个人博客"></a>搭建个人博客</h2><h3 id="github设置远程库"><a href="#github设置远程库" class="headerlink" title="github设置远程库"></a>github设置远程库</h3><ul><li>登录后点击“+”号，选择New repository</li><li>在Repository name下面填写你要创建的地址，这个地址是就是你的域名。e.g., shoresouth.github.io以后就在地址栏直接输入它就可以访问网站。<br><strong>注：</strong> 名称必须与用户名一致！</li><li>创建之后，点击setting设置远程库：<br>找到GitHub Pages点击Automatic page generator，等待github pages创建完成，然后输入你创建的地址测试github pager是否创建成功。此时页面是空的没有任何东西(404)。</li></ul><p>下面要做的就是使用hexo模板将源码放到github。</p><h3 id="初始化hexo"><a href="#初始化hexo" class="headerlink" title="初始化hexo"></a>初始化hexo</h3><ul><li>创建一个空文件夹用于存放hexo</li><li>右键该文件夹使用 git bash here</li><li>输入命令：<pre class="line-numbers language-none"><code class="language-none">npm install hexo --save //初始化hexo基础配置文件hexo init //初始化hexo。这个命令和git 仓库命令相似 npm install //配置nodehexo g //加载hexo基础html、css、js等文件<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="配置hexo"><a href="#配置hexo" class="headerlink" title="配置hexo"></a>配置hexo</h3><p>当我们安装完毕的时候，就需要对Hexo进行一些配置，具体是通过_config.yml文件来完成的。<br>hexo结构</p><pre class="line-numbers language-none"><code class="language-none">.deploy_git node_modules //包所需要的依赖public // 静态网页存储的目录scaffolds // 样本source // 我们自己的md文件themes // 主题文件.gitignore_config.yml // 配置db.jsonpackage.jsonpackage-lock.json<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="本地测试"><a href="#本地测试" class="headerlink" title="本地测试"></a>本地测试</h3><p>hexo server: 相当于开启了一个本地的服务器，会提示你拷贝url到浏览器。</p><pre class="line-numbers language-none"><code class="language-none">hexo s <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在浏览器输入 <a href="http://localhost:4000/">http://localhost:4000/</a> 展现页面，证明本地hexo默认模板配置成功。</p><h3 id="推送到远程仓库（github）"><a href="#推送到远程仓库（github）" class="headerlink" title="推送到远程仓库（github）"></a>推送到远程仓库（github）</h3><p>根目录_config.yml中配置自己的远程仓库地址</p><pre class="line-numbers language-none"><code class="language-none"># Deployment## Docs: https://hexo.io/docs/one-command-deploymentdeploy:  type: git  #repo: https://github.com/ShoreSouth/ShoreSouth.github.io.git //https传输容易失败  repo: git@github.com:ShoreSouth/ShoreSouth.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>安装git部署插件</p><pre class="line-numbers language-none"><code class="language-none">cnpm install --save hexo-deployer-git<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>发布hexo到github page</p><pre class="line-numbers language-none"><code class="language-none">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d //一次性执行清空、刷新、部署三个命令<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 建站 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
